



// console.log(document.head);
// console.log(document.documentElement);

// console.log(document.body.childNodes);
// const body = document.querySelectorAll("body");

for (let node of document.body.childNodes) {
  if (node.nodeName == "#text") {
    continue;
  }
  console.log(node);
}

// console.log(document.body.firstChild);
// console.log(document.body.firstElementChild);
// console.log(document.body.lastChild);

// will get element of child current 2 levels up
//console.log(document.querySelector("#current").parentNode.parentNode);
//console.log(document.querySelector("#current").parentElement);

// console.log(
//   document.querySelector("[data-current='3']").nextSibling.nextSibling
// );
// console.log(document.querySelector("[data-current='3']").nextElementSibling);




const btn = document.querySelectorAll("button"),
  overlay = document.querySelector(".overlay");

// // bad way of doing it
// btn.onclick = function () {
//   alert("Test alert");
// };

// btn.onclick = function () {
//   alert("second alert");
// };

// btn.addEventListener("click", () => {
//   alert("Clicked");
// });

const deleteElement = (element) => {
  // element.target.remove();
  console.log(element.target);
};

// adding event listener to all psyodo array
btn.forEach((item) => {
  item.addEventListener("click", deleteElement, { once: true });
});

// change browser`s default responce
const link = document.querySelector("a");
link.addEventListener("click", (event) => {
  event.preventDefault();

  console.log(event.target);
});

const box = document.getElementById("box"),
  btns = document.getElementsByTagName("button"),
  circles = document.getElementsByClassName("circle"),
  wrapper = document.querySelector(".wrapper"),
  hearts = wrapper.querySelectorAll(".heart"),
  oneHeart = wrapper.querySelector(".heart");

// box.style.backgroundColor = "blue";
// box.style.width = "500px";

// passing cssstyle inline as text
let num = "500px";
box.style.cssText = `background-color: green; width: ${num} `;

btns[1].style.borderRadius = "100%";
circles[0].style.backgroundColor = "green";
//cant circles.style.backgroundColor = "green";  because "circles" Pseudo object"

// old style method
for (let i = 0; i < hearts.length; i++) {
  hearts[i].style.backgroundColor = "blue";
}

// colors each heart blue in loop
hearts.forEach((item) => {
  item.style.backgroundColor = "blue";
});

// creates a new element "div in this case" it exists only in JS
const div = document.createElement("div");
// styled it with .black from css
div.classList.add("black");
//now added created element to end of <body>
//  document.body.append(div);

// creates just text
const text = document.createTextNode("This is text");



// puts element to the beginning
wrapper.append(div);
// wrapper.appendChild(div);

// old style
// wrapper.insertBefore(div, hearts[0]);
// wrapper.removeChild(hearts[1]);
// wrapper.replaceChild(circles[0], hearts[0]);

// hearts[0].after(div);

// circles[0].remove();

// hearts[0].replaceWith(circles[0]);

// inserting HTML text into created object"div"
div.innerHTML = "<h1>Hello World</h1>";

// inserting ONlY text
// div.textContent = "Hello";

div.insertAdjacentHTML("beforeend", "<h2>Hello</h2>");













//old style 
const box = document.getElementById("box");

console.log(box);

const btns = document.getElementsByTagName("button")[1];

console.log(btns);

const circles = document.getElementsByClassName("circle");

console.log(circles[2]);

// new way

const hearts = document.querySelectorAll(".heart");

hearts.forEach(item =>{
    console.log(item);
});
console.log(hearts);

const oneHeart = document.querySelector(".heart");
console.log(oneHeart);

















  //right way to inherit prototype
const soldier = {
  health: 400,
  armor: 160,
  sayHello: function () {
    console.log("Hello");
  },
};

const joe = Object.create(soldier);

joe.sayHello();

const john = {
  health: 100,
};

Object.setPrototypeOf(john, soldier);
old style of codding absolente
john.__proto__ = soldier;

function log(a, b, c) {
    console.log(a);
    console.log(b);
    console.log(c);
  }

  const num = [2, 5, 7];

  log(...num);

const array = ["a", "b"];

const newAaray = [...array];

const q = {
    one: 1,
    two: 2
};

const newObj = {...q};

const oldArray = ["a", "b", "c"];
const newArray = oldArray.slice();

newArray[1] = "Demon";

console.log(newArray);
console.log(oldArray);

const video = ["youtube", "vimeo", "rutube"],
      blogs = ["wordpress", "livejournal", "blogger"],
      internet = [...video, ...blogs, "vk", "facebook"];
console.log(internet);

const arr = [12, 3, 46, 8, 10];

arr.sort(compareNum);
console.log(arr);

function compareNum(a, b) {
  return a - b;
}

arr[99] = 0;
console.log(arr.length);
console.log(arr);

		cycles trough array showing its id, value, array. Cant use break or continue
arr.forEach(function (item, i, arr) {
  console.log(`${i}: ${item} inside Array ${arr}`);
});

remove last
arr.pop();

add to last
arr.push(10);
console.log(arr);

for (let i = 0; i < arr.length; i++) {
  console.log(arr[i]);
}

for (let value of arr) {
  console.log(value);
}

"use strict";

const options = {
  name: "test",
  width: 1024,
  height: 1024,
  colors: {
    border: "black",
    background: "red",
  },
  makeTest: function () {
    console.log("Test");
  },
};
// Cycles trought the object and gets the values.
let counter = 0;
for (let key in options) {
  if (typeof options[key] === "object") {
    for (let i in options[key]) {
      console.log(`This is propertie ${key} in ${options[key][i]}`);
      counter++;
    }
  } else {
    console.log(`This is propertie ${key} in ${options[key]}`);
    counter++;
  }
}
console.log("The number of keys in this object is", counter);

//destructorisation
const { border, background } = options.colors;
console.log(border);

creates array from users input if entered with ", "
const str = prompt("","");
const products = str.split(", ");
console.log(products);

creates array from users input if entered with ", "
and then joins it in a string formated with ";"
const str = prompt("", "");
const products = str.split(", ");
products.sort();
console.log(products.join("; "));
